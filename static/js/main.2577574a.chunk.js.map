{"version":3,"sources":["services/countryservice.tsx","reducers/countryReducer.tsx","components/CountryThumb.tsx","components/Region.tsx","components/HamburgerButton.tsx","components/MenuBar.tsx","components/Country.tsx","components/SideDrawer.tsx","components/BackDrop.tsx","components/Info.tsx","App.tsx","store.tsx","index.tsx"],"names":["a","async","axios","get","countries","data","console","log","initializer","dispatch","countryservice","type","countryReducer","state","action","concat","CountryThumb","props","useState","redirect","setRedirect","className","onClick","to","country","name","src","flag","alt","connect","region","filter","c","toLowerCase","includes","search","map","key","shortid","generate","HamburgerButton","Menubar","clearFilterInput","doc","document","getElementById","setSearch","value","toggleSideDrawer","id","placeholder","onChange","e","preventDefault","target","currency","symbol","result","find","match","params","currencies","capital","population","SideDrawer","cname","sideDrawerOpen","BackDrop","world","reduce","acc","item","regions","Object","values","r","printStuff","mapDispatchToProps","useDispatch","setSideDrawerOpen","useEffect","exact","path","render","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM"],"mappings":"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","file":"static/js/main.2577574a.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst url = 'https://restcountries.eu/rest/v2/all?fields=name;capital;region;flag;population;currencies;'\r\n\r\nconst getAllcountries = async () => {\r\n  try {\r\n    const countries = await axios.get(url)\r\n    return countries.data\r\n\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\nexport default{\r\n    getAllcountries\r\n}\r\n","import countryservice from '../services/countryservice'\r\n\r\nconst countryReducer = (state:any[] = [], action: any) => {\r\n    switch (action.type) {\r\n        case 'INIT':\r\n            state = state.concat(action.data)\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const initializer=()=>{\r\nreturn async(dispatch:any)=>{\r\n    const countries=await countryservice.getAllcountries()\r\n    dispatch({\r\n        type:'INIT',\r\n        data:countries\r\n    })\r\n}\r\n}\r\n\r\nexport default countryReducer\r\n","import React, { useState } from 'react'\r\nimport '../css/countryThumb.css'\r\nimport {\r\n    Redirect\r\n  } from 'react-router-dom'\r\n\r\ninterface Props {\r\ncountry:any\r\n}\r\n\r\nconst CountryThumb:React.FC<Props> = (props) => {\r\n    const[redirect,setRedirect]=useState(false)\r\n    const countryInfo=()=>{\r\n       setRedirect(true)\r\n    }\r\nreturn (<div className='item' onClick={countryInfo}>\r\n    {redirect?<Redirect to={`/country/${props.country.name}`}></Redirect>:null}\r\n    <img className='countryThumbImg' src={props.country.flag} alt='notfound'></img>\r\n    <span className='caption'>{props.country.name}</span>\r\n</div>)\r\n}\r\nexport default CountryThumb","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport shortid from 'shortid'\r\nimport '../css/region.css'\r\nimport CountryThumb from './CountryThumb'\r\n\r\ninterface Props {\r\n    countries: any[]\r\n    filter:string\r\n    search:string\r\n}\r\nconst Region:React.FC<Props> = (props) => {\r\n    const region=props.filter==='All'? props.countries.filter(c=>c.name.toLowerCase().includes(props.search.toLowerCase())):\r\n    props.countries.filter(c=>c.region===props.filter && c.name.toLowerCase().includes(props.search.toLowerCase()))\r\nreturn (<div>\r\n  <h2>{props.filter}</h2>\r\n{region.map(c =><CountryThumb key={shortid.generate()} country={c}></CountryThumb>)}\r\n</div>)\r\n}\r\nconst mapDispatchToProps = {\r\n  }\r\n  const mapStateToProps = (state: any) => {\r\n    return {\r\n      countries: state.countries,\r\n    }\r\n  }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Region)","import React from 'react'\r\nimport '../css/HamburgerButton.css'\r\n\r\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n\r\n}\r\n\r\nconst HamburgerButton:React.FC<Props> = (props) => {\r\nreturn (\r\n    <button {...props}  className='toggle-button'>      {/* propsit jotta saa napin ominaisuudet */}\r\n        <div className='toggle-button-line'></div>\r\n        <div className='toggle-button-line'></div>\r\n        <div className='toggle-button-line'></div>\r\n    </button>\r\n)\r\n}\r\nexport default HamburgerButton","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/menubar.css';\r\nimport HamburgerButton from './HamburgerButton';\r\n\r\ninterface Props {\r\n  setSearch: any;\r\n  toggleSideDrawer: any;\r\n}\r\n\r\nconst Menubar: React.FC<Props> = props => {\r\n  const handleChange = (e: any) => {\r\n    e.preventDefault();\r\n    props.setSearch(e.target.value);\r\n  };\r\n  const clearFilterInput = () => {\r\n    const doc = document.getElementById('filterinput') as HTMLInputElement;\r\n    if (doc) {\r\n      props.setSearch('');\r\n      doc.value = '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"menubar\">\r\n        <nav className=\"menubar_navigation\">\r\n          <HamburgerButton\r\n            className=\"hamburgerMenu\"\r\n            onClick={props.toggleSideDrawer}\r\n          ></HamburgerButton>\r\n          <Link onClick={clearFilterInput} className=\"logo\" to=\"/\">\r\n            Countries\r\n          </Link>\r\n          <Link\r\n            onClick={clearFilterInput}\r\n            className=\"menuLinkItem\"\r\n            to=\"/Africa\"\r\n          >\r\n            Africa\r\n          </Link>\r\n          <Link\r\n            onClick={clearFilterInput}\r\n            className=\"menuLinkItem\"\r\n            to=\"/Europe\"\r\n          >\r\n            Europe\r\n          </Link>\r\n          <Link\r\n            onClick={clearFilterInput}\r\n            className=\"menuLinkItem\"\r\n            to=\"/Americas\"\r\n          >\r\n            Americas\r\n          </Link>\r\n          <Link onClick={clearFilterInput} className=\"menuLinkItem\" to=\"/Asia\">\r\n            Asia\r\n          </Link>\r\n          <Link\r\n            onClick={clearFilterInput}\r\n            className=\"menuLinkItem\"\r\n            to=\"/Oceania\"\r\n          >\r\n            Oceania\r\n          </Link>\r\n\r\n          <Link onClick={clearFilterInput} className=\"menuLinkItem\" to=\"/All\">\r\n            All\r\n          </Link>\r\n          <input\r\n            id=\"filterinput\"\r\n            placeholder=\"filter by name\"\r\n            onChange={handleChange}\r\n          ></input>\r\n        </nav>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menubar;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../css/country.css'\r\n\r\ninterface Props {\r\n    countries: any[]\r\n    match: { params: any }\r\n}\r\n\r\nconst Country: React.FC<Props> = (props) => {\r\n    const result = props.countries.find(c=>c.name===props.match.params.name)\r\n    let currency\r\n    let symbol\r\n    const faker={\r\n        name:'not found'\r\n    }\r\n    const country=result?result:faker\r\n    \r\n    if(result){\r\n        currency=country.currencies[0].name\r\n        symbol=country.currencies[0].symbol\r\n    }\r\n    return (<div>\r\n        <div className='container'>\r\n        <h2>{country.name}</h2>\r\n        <img className='flag' src={country.flag} alt='not found'></img><br></br>\r\n        <span className='element'>{'Capital:\\t\\t'+country.capital}</span><br></br>\r\n        <span className='element'>{'Population:  \\t '+country.population}</span><br></br>\r\n        <span className='element'>{'Currency:  \\t '+currency+' '+symbol}</span><br></br>\r\n\r\n        </div>\r\n    </div>)\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        countries: state.countries,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Country)","import React from 'react'\r\nimport '../css/sideDrawer.css'\r\nimport { Link } from 'react-router-dom' \r\n\r\ninterface Props {\r\n    sideDrawerOpen:boolean\r\n}\r\n\r\nconst SideDrawer: React.FC<Props> = (props) => {\r\n    let cname = props.sideDrawerOpen ? 'sidedrawer open' : 'sidedrawer'\r\n    return (\r\n        <nav className={cname}>\r\n            <ul>\r\n                <li><Link  to=\"/Africa\">Africa </Link></li>\r\n                <li><Link  to=\"/Europe\">Europe </Link></li>\r\n                <li><Link  to=\"/Americas\">Americas </Link></li>\r\n                <li><Link  to=\"/Asia\">Asia </Link></li>\r\n                <li><Link  to=\"/All\">All </Link></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nexport default SideDrawer","import React from 'react'\r\nimport '../css/BackDrop.css'\r\n\r\ninterface Props extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n    sideDrawerOpen:any\r\n    toggleSideDrawer:any\r\n}\r\n\r\nconst BackDrop:React.FC<Props> = (props) => {\r\n    let cname = props.sideDrawerOpen ? 'backdrop open' : 'backdrop'\r\nreturn (<div onClick={props.toggleSideDrawer} className={cname}></div>) \r\n}\r\nexport default BackDrop","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport '../css/Info.css'\r\ninterface Region{\r\n    name:string\r\n    countries:number\r\n    population:number\r\n}\r\ninterface Props {\r\ncountries:any[]\r\n}\r\n\r\nconst Info:React.FC<Props> = (props) => {\r\n    const fetched=props.countries\r\n   \r\n    const world=fetched.reduce((acc,item)=>{\r\n        acc[item.region]=acc[item.region]||{countries:0, population:0,name:item.region}\r\n        acc[item.region].countries++\r\n        acc[item.region].population=acc[item.region].population+item.population\r\n        return acc\r\n    },{})\r\n    if(!world['Asia']){\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n    const regions:Region[]=Object.values(world)\r\nconst printStuff=(r:Region)=>{\r\nreturn(r.name?<div className='regionInfo' key={r.name}>\r\n    <h3>{r.name}</h3>\r\n    <span>countries: {r.countries}</span><br></br>\r\n    <span>population: {r.population}</span>\r\n</div>:null)\r\n}\r\n    \r\n    \r\n\r\nreturn (<div className='page'>\r\n    <h1>CountryApp</h1>\r\n    <ul>\r\n        {regions.map(r=>printStuff(r))}\r\n    </ul>\r\n</div>)\r\n}\r\nconst mapDispatchToProps = {\r\n  }\r\n  const mapStateToProps = (state: any) => {\r\n    return {\r\n      countries: state.countries,\r\n    }\r\n  }\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Info)","import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { initializer } from './reducers/countryReducer';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Region from './components/Region';\nimport Menubar from './components/MenuBar';\nimport Country from './components/Country';\nimport SideDrawer from './components/SideDrawer';\nimport BackDrop from './components/BackDrop';\nimport Info from './components/Info';\n\ninterface Props {\n  initializer: any;\n  countries: any;\n}\n\nconst App: React.FC<Props> = props => {\n  const dispatch = useDispatch();\n  const [search, setSearch] = useState<string>('');\n  const [sideDrawerOpen, setSideDrawerOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    dispatch(initializer());\n  }, [dispatch]);\n\n  const toggleSideDrawer = () => {\n    setSideDrawerOpen(!sideDrawerOpen);\n  };\n\n  return (\n    <div>\n      {}\n      <Router>\n        <SideDrawer sideDrawerOpen={sideDrawerOpen}></SideDrawer>\n        <BackDrop\n          sideDrawerOpen={sideDrawerOpen}\n          toggleSideDrawer={toggleSideDrawer}\n        ></BackDrop>\n        <div className=\"header\"></div>\n        <Menubar\n          toggleSideDrawer={toggleSideDrawer}\n          setSearch={setSearch}\n        ></Menubar>\n        <Route exact path=\"/\">\n          <Info />\n        </Route>\n        <Route exact path=\"/Africa\">\n          <Region search={search} filter=\"Africa\" />\n        </Route>\n        <Route exact path=\"/Europe\">\n          <Region search={search} filter=\"Europe\" />\n        </Route>\n        <Route exact path=\"/Americas\">\n          <Region search={search} filter=\"Americas\" />\n        </Route>\n        <Route exact path=\"/Asia\">\n          <Region search={search} filter=\"Asia\" />\n        </Route>\n        <Route exact path=\"/Oceania\">\n          <Region search={search} filter=\"Oceania\" />\n        </Route>\n        <Route exact path=\"/All\">\n          <Region search={search} filter=\"All\" />\n        </Route>\n        <Route\n          exact\n          path=\"/country/:name\"\n          render={props => <Country {...props} />}\n        />\n      </Router>\n    </div>\n  );\n};\nconst mapDispatchToProps = {\n  initializer\n};\nconst mapStateToProps = (state: any) => {\n  return {\n    countries: state.countries\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore, combineReducers,applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport countryReducer from './reducers/countryReducer'\r\n\r\nconst reducer=combineReducers({\r\n    countries:countryReducer\r\n})\r\nconst store=createStore(\r\n    reducer,\r\n    applyMiddleware(thunk)\r\n)\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'))\n\n"],"sourceRoot":""}